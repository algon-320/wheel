fn add1(p: *u64) -> () {
    *p = *p + 1
}

fn repeat(n: u64, f: fn(*u64)->(), p: *u64) -> () {
    if n == 0 {
        ()
    } else {
        let _ign = f(p) in
        repeat(n - 1, f, p)
    }
}

fn main() -> u64 {
    let x = 0 in
    {
        repeat(10, add1, &x);
        x // should be 10
    }
}
